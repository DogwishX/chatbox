{"ast":null,"code":"import { createChatBotMessage } from \"react-chatbot-kit\";\n\nclass ActionProvider {\n  constructor(createChatbotMessage, setStateFunc, createClientMessage) {\n    this.createChatbotMessage = createChatbotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n    this.isFirstMessage = true;\n  }\n\n  oilySkin() {\n    const oilySkinMessage = createChatBotMessage(\"Voce tem a pele oleosa, entendido.\");\n    this.updateChatbotState(oilySkinMessage);\n  }\n\n  drySkin() {\n    const drySkinMessage = createChatBotMessage(\"Vai se hidratar!! \");\n    this.updateChatbotState(drySkinMessage);\n  }\n\n  updateChatbotState(message) {\n    // NOTE: This function is set in the constructor, and is passed in      // from the top level Chatbot component. The setState function here     // actually manipulates the top level state of the Chatbot, so it's     // important that we make sure that we preserve the previous state.\n    this.setState(prevState => ({ ...prevState,\n      messages: [...prevState.messages, message]\n    }));\n  }\n\n}\n\nexport default ActionProvider;","map":{"version":3,"sources":["/home/zero/Documents/github/chatbox/src/components/Chat/ActionProvider.js"],"names":["createChatBotMessage","ActionProvider","constructor","createChatbotMessage","setStateFunc","createClientMessage","setState","isFirstMessage","oilySkin","oilySkinMessage","updateChatbotState","drySkin","drySkinMessage","message","prevState","messages"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,mBAArC;;AAEA,MAAMC,cAAN,CAAqB;AACnBC,EAAAA,WAAW,CACTC,oBADS,EAETC,YAFS,EAGTC,mBAHS,EAIT;AACA,SAAKF,oBAAL,GACEA,oBADF;AAEA,SAAKG,QAAL,GAAgBF,YAAhB;AACA,SAAKC,mBAAL,GACEA,mBADF;AAEA,SAAKE,cAAL,GAAsB,IAAtB;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,UAAMC,eAAe,GAAGT,oBAAoB,CAC1C,oCAD0C,CAA5C;AAGA,SAAKU,kBAAL,CAAwBD,eAAxB;AACD;;AAEDE,EAAAA,OAAO,GAAG;AACR,UAAMC,cAAc,GAAGZ,oBAAoB,CACzC,oBADyC,CAA3C;AAGA,SAAKU,kBAAL,CAAwBE,cAAxB;AACD;;AAEDF,EAAAA,kBAAkB,CAACG,OAAD,EAAU;AAC1B;AAEA,SAAKP,QAAL,CAAeQ,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5BC,MAAAA,QAAQ,EAAE,CAAC,GAAGD,SAAS,CAACC,QAAd,EAAwBF,OAAxB;AAFkB,KAAhB,CAAd;AAID;;AAnCkB;;AAqCrB,eAAeZ,cAAf","sourcesContent":["import { createChatBotMessage } from \"react-chatbot-kit\";\n\nclass ActionProvider {\n  constructor(\n    createChatbotMessage,\n    setStateFunc,\n    createClientMessage\n  ) {\n    this.createChatbotMessage =\n      createChatbotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage =\n      createClientMessage;\n    this.isFirstMessage = true;\n  }\n\n  oilySkin() {\n    const oilySkinMessage = createChatBotMessage(\n      \"Voce tem a pele oleosa, entendido.\"\n    );\n    this.updateChatbotState(oilySkinMessage);\n  }\n\n  drySkin() {\n    const drySkinMessage = createChatBotMessage(\n      \"Vai se hidratar!! \"\n    );\n    this.updateChatbotState(drySkinMessage);\n  }\n\n  updateChatbotState(message) {\n    // NOTE: This function is set in the constructor, and is passed in      // from the top level Chatbot component. The setState function here     // actually manipulates the top level state of the Chatbot, so it's     // important that we make sure that we preserve the previous state.\n\n    this.setState((prevState) => ({\n      ...prevState,\n      messages: [...prevState.messages, message],\n    }));\n  }\n}\nexport default ActionProvider;\n"]},"metadata":{},"sourceType":"module"}