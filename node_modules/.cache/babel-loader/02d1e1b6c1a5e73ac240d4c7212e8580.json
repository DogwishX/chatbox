{"ast":null,"code":"var _jsxFileName = \"/home/zero/Documents/github/chatbox/src/components/Chat/config.js\";\nimport React from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport SingleFlight from \"./components/SingleFlight/SingleFlight\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botName = \"Somebot\";\nconst config = {\n  // Defines the chatbot name\n  botName: botName,\n  // Defines an array of initial messages that will be displayed on first render\n  initialMessages: [createChatBotMessage(`Hi I'm ${botName}`), createChatBotMessage(\"First things first, which airport are you looking for information from?\", {\n    widget: \"airportSelector\",\n    delay: 500\n  })],\n  // Defines an object that will be injected into the chatbot state, you can use this state in widgets for example\n  state: {\n    airports: [],\n    flightType: \"\",\n    selectedFlightId: \"\",\n    selectedFlight: null\n  },\n  // Defines an object of custom components that will replace the stock chatbot components.\n  customComponents: {\n    // Replaces the default header\n    header: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"red\",\n        padding: \"5px\",\n        borderRadius: \"3px\"\n      },\n      children: \"This is the header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this),\n    // Replaces the default bot avatar\n    botAvatar: props => /*#__PURE__*/_jsxDEV(FlightBotAvatar, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this),\n    // Replaces the default bot chat message container\n    botChatMessage: props => /*#__PURE__*/_jsxDEV(CustomChatMessage, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this),\n    // Replaces the default user icon\n    userAvatar: props => /*#__PURE__*/_jsxDEV(MyUserAvatar, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this),\n    // Replaces the default user chat message\n    userChatMessage: props => /*#__PURE__*/_jsxDEV(MyUserChatMessage, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  },\n  // Defines an object of custom styles if you want to override styles\n  customStyles: {\n    // Overrides the chatbot message styles\n    botMessageBox: {\n      backgroundColor: \"#376B7E\"\n    },\n    // Overrides the chat button styles\n    chatButton: {\n      backgroundColor: \"#5ccc9d\"\n    }\n  },\n  // Defines an array of widgets that you want to render with a chatbot message\n  widgets: [{\n    // defines the name you will use to reference to this widget in \"createChatBotMessage\".\n    widgetName: \"singleFlight\",\n    // Function that will be called internally to resolve the widget\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(SingleFlight, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this),\n    // Any props you want the widget to receive on render\n    props: {},\n    // Any piece of state defined in the state object that you want to pass down to this widget\n    mapStateToProps: [\"selectedFlightId\", \"selectedFlight\"]\n  }]\n};\nexport default config;","map":{"version":3,"sources":["/home/zero/Documents/github/chatbox/src/components/Chat/config.js"],"names":["React","createChatBotMessage","SingleFlight","botName","config","initialMessages","widget","delay","state","airports","flightType","selectedFlightId","selectedFlight","customComponents","header","backgroundColor","padding","borderRadius","botAvatar","props","botChatMessage","userAvatar","userChatMessage","customStyles","botMessageBox","chatButton","widgets","widgetName","widgetFunc","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,mBAArC;AAEA,OAAOC,YAAP,MAAyB,wCAAzB;;AAEA,MAAMC,OAAO,GAAG,SAAhB;AAEA,MAAMC,MAAM,GAAG;AACb;AACAD,EAAAA,OAAO,EAAEA,OAFI;AAGb;AACAE,EAAAA,eAAe,EAAE,CACfJ,oBAAoB,CAAE,UAASE,OAAQ,EAAnB,CADL,EAEfF,oBAAoB,CAClB,yEADkB,EAElB;AACEK,IAAAA,MAAM,EAAE,iBADV;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAFkB,CAFL,CAJJ;AAcb;AACAC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,EAFP;AAGLC,IAAAA,gBAAgB,EAAE,EAHb;AAILC,IAAAA,cAAc,EAAE;AAJX,GAfM;AAqBb;AACAC,EAAAA,gBAAgB,EAAE;AAChB;AACAC,IAAAA,MAAM,EAAE,mBACN;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAE,KADZ;AAELC,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,YAAY,EAAE;AAHT,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHc;AAahB;AACAC,IAAAA,SAAS,EAAGC,KAAD,iBACT,QAAC,eAAD,OAAqBA;AAArB;AAAA;AAAA;AAAA;AAAA,YAfc;AAiBhB;AACAC,IAAAA,cAAc,EAAGD,KAAD,iBACd,QAAC,iBAAD,OAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,YAnBc;AAqBhB;AACAE,IAAAA,UAAU,EAAGF,KAAD,iBACV,QAAC,YAAD,OAAkBA;AAAlB;AAAA;AAAA;AAAA;AAAA,YAvBc;AAyBhB;AACAG,IAAAA,eAAe,EAAGH,KAAD,iBACf,QAAC,iBAAD,OAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA;AA3Bc,GAtBL;AAoDb;AACAI,EAAAA,YAAY,EAAE;AACZ;AACAC,IAAAA,aAAa,EAAE;AACbT,MAAAA,eAAe,EAAE;AADJ,KAFH;AAKZ;AACAU,IAAAA,UAAU,EAAE;AACVV,MAAAA,eAAe,EAAE;AADP;AANA,GArDD;AA+Db;AACAW,EAAAA,OAAO,EAAE,CACP;AACE;AACAC,IAAAA,UAAU,EAAE,cAFd;AAGE;AACAC,IAAAA,UAAU,EAAGT,KAAD,iBACV,QAAC,YAAD,OAAkBA;AAAlB;AAAA;AAAA;AAAA;AAAA,YALJ;AAOE;AACAA,IAAAA,KAAK,EAAE,EART;AASE;AACAU,IAAAA,eAAe,EAAE,CACf,kBADe,EAEf,gBAFe;AAVnB,GADO;AAhEI,CAAf;AAmFA,eAAezB,MAAf","sourcesContent":["import React from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\n\nimport SingleFlight from \"./components/SingleFlight/SingleFlight\";\n\nconst botName = \"Somebot\";\n\nconst config = {\n  // Defines the chatbot name\n  botName: botName,\n  // Defines an array of initial messages that will be displayed on first render\n  initialMessages: [\n    createChatBotMessage(`Hi I'm ${botName}`),\n    createChatBotMessage(\n      \"First things first, which airport are you looking for information from?\",\n      {\n        widget: \"airportSelector\",\n        delay: 500,\n      }\n    ),\n  ],\n  // Defines an object that will be injected into the chatbot state, you can use this state in widgets for example\n  state: {\n    airports: [],\n    flightType: \"\",\n    selectedFlightId: \"\",\n    selectedFlight: null,\n  },\n  // Defines an object of custom components that will replace the stock chatbot components.\n  customComponents: {\n    // Replaces the default header\n    header: () => (\n      <div\n        style={{\n          backgroundColor: \"red\",\n          padding: \"5px\",\n          borderRadius: \"3px\",\n        }}\n      >\n        This is the header\n      </div>\n    ),\n    // Replaces the default bot avatar\n    botAvatar: (props) => (\n      <FlightBotAvatar {...props} />\n    ),\n    // Replaces the default bot chat message container\n    botChatMessage: (props) => (\n      <CustomChatMessage {...props} />\n    ),\n    // Replaces the default user icon\n    userAvatar: (props) => (\n      <MyUserAvatar {...props} />\n    ),\n    // Replaces the default user chat message\n    userChatMessage: (props) => (\n      <MyUserChatMessage {...props} />\n    ),\n  },\n  // Defines an object of custom styles if you want to override styles\n  customStyles: {\n    // Overrides the chatbot message styles\n    botMessageBox: {\n      backgroundColor: \"#376B7E\",\n    },\n    // Overrides the chat button styles\n    chatButton: {\n      backgroundColor: \"#5ccc9d\",\n    },\n  },\n  // Defines an array of widgets that you want to render with a chatbot message\n  widgets: [\n    {\n      // defines the name you will use to reference to this widget in \"createChatBotMessage\".\n      widgetName: \"singleFlight\",\n      // Function that will be called internally to resolve the widget\n      widgetFunc: (props) => (\n        <SingleFlight {...props} />\n      ),\n      // Any props you want the widget to receive on render\n      props: {},\n      // Any piece of state defined in the state object that you want to pass down to this widget\n      mapStateToProps: [\n        \"selectedFlightId\",\n        \"selectedFlight\",\n      ],\n    },\n  ],\n};\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}